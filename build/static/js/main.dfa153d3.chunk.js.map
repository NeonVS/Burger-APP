{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxillary/Auxillary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-order.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","err","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","error","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","authSuccess","idToken","checkAuthTimeout","expirationTime","setTimeout","logout","localStorage","removeItem","setAuthRedirectPath","path","authCheckState","getItem","expirationDate","Date","getTime","auth","email","password","isSignup","authData","returnSecureToken","url","expiresIn","setItem","localId","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Box","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","console","log","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchaseable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","loading","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","Ordersummary","burger","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","burgerBuilderActions","Logout","onLogout","actions","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","Boolean","window","location","hostname","match","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","building","action","updatedIngredient","updatedState","setIngredient","fetchIngredientFailed","reducer","purchased","puchaseBurgerStart","fetchOrderSuccess","fetchOrderFail","fetchOrderStart","authRedirectPath","authStart","toString","authLogout","authFail","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfa153d3.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDeRS_FAIL';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject,updatedProperties) =>{\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value,rules) =>{\r\n    let isValid = true;\r\n    if(!rules){\r\n        return true;\r\n    }\r\n    if(rules.required){\r\n        if(isValid)\r\n            isValid = value.trim() !== '';\r\n    }\r\n    if(rules.minLength){\r\n        if(isValid)\r\n            isValid = value.length >= rules.minLength;\r\n    }\r\n    if(rules.maxLength){\r\n        if(isValid)\r\n            isValid = value.length <= rules.maxLength;\r\n    }\r\n    return isValid;\r\n}","const aux =(props)=>props.children;\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\nexport const addIngredient = name =>{\r\n    return{\r\n        type:actionTypes.ADD_INGREDIENT,\r\n        ingredientName:name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = name =>{\r\n    return{\r\n        type:actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName:name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) =>{\r\n    return {\r\n        type:actionTypes.SET_INGREDIENTS,\r\n        ingredients:ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () =>{\r\n    return {\r\n        type:actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () =>{\r\n    return dispatch =>{\r\n        axios.get('https://burger-app-6c70b.firebaseio.com/ingredients.json').then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        }).catch(err=>{\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = (orderData,token) =>{\r\n    return (dispatch) =>{\r\n        dispatch(purchaseBurgerStart());\r\n        \r\n        axios.post('/orders.json?auth='+token,orderData)\r\n        .then(response=>{\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error));\r\n        }); \r\n    };\r\n};\r\n\r\nexport const purchaseInit = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders)=>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders:orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token,userId) =>{\r\n    return dispatch =>{\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\r\n        \r\n        axios.get('/orders.json'+queryParams)\r\n        .then(res=>{\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({...res.data[key],id:key});\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders));\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchOrdersFail(err));\r\n        });\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token,userId) =>{\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) =>{\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        },+expirationTime*1000)\r\n    };\r\n};\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) =>{\r\n    return {\r\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate >new Date()){\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token,userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));\r\n            }else{\r\n                dispatch(logout());\r\n            }\r\n            \r\n        }\r\n    };\r\n}\r\n\r\nexport const auth =(email,password,isSignup) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true,\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        if(!isSignup){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        }\r\n        axios.post(url,authData).then(response =>{\r\n            const expirationDate = new Date(new Date().getTime()+response.data.expiresIn*1000);\r\n            localStorage.setItem('token',response.data.idToken);\r\n            localStorage.setItem('expirationDate',expirationDate);\r\n            localStorage.setItem('userId',response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        }).catch(err =>\r\n            dispatch(authFail(err.response.data.error))\r\n        );\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1MNts\",\"BreadTop\":\"BurgerIngredient_BreadTop__2MOjt\",\"Seeds1\":\"BurgerIngredient_Seeds1__2z-PH\",\"Seeds2\":\"BurgerIngredient_Seeds2__36UB2\",\"Meat\":\"BurgerIngredient_Meat__1jQgi\",\"Cheese\":\"BurgerIngredient_Cheese__vAUhk\",\"Salad\":\"BurgerIngredient_Salad__2CkMH\",\"Bacon\":\"BurgerIngredient_Bacon__1bQid\"};","import axios from 'axios';\r\n\r\nconst instance =axios.create({\r\n    baseURL:'https://burger-app-6c70b.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1vsG2\",\"Open\":\"SideDrawer_Open__1uLvj\",\"Close\":\"SideDrawer_Close__1wup3\",\"Logo\":\"SideDrawer_Logo__3i3vQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__37YUe\",\"Label\":\"BuildControl_Label__1Du4V\",\"Less\":\"BuildControl_Less__2EsEs\",\"More\":\"BuildControl_More__1xZ-e\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\nconst backdrop = (props)=>(\r\n    props.show?<div className={classes.Backdrop}\r\n    onClick={props.clicked}>\r\n    </div>:null\r\n);\r\nexport default backdrop;","import React,{Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    render(){\r\n    return (\r\n    <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className={classes.Modal} \r\n        style={{transform:this.props.show ? 'translateY(0)':'translateY(-100vh)',opacity:this.props.show ? '1':'0'}}>\r\n            {this.props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n}\r\n}\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__8p4Lb\",\"Logo\":\"Toolbar_Logo__3MjSV\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2-ac8\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button =(props)=>{\r\n    return (\r\n    <button \r\n        disabled={props.disabled} \r\n        className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n)};\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__M7hOZ\",\"active\":\"NavigationItem_active__1Xqgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__26KR4\",\"OrderButton\":\"BuildControls_OrderButton__2SIut\",\"enable\":\"BuildControls_enable__A1QG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3I0iV\",\"Success\":\"Button_Success__28h_A\",\"Danger\":\"Button_Danger__3fTox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__R9Jv_\",\"load6\":\"Spinner_load6__2-qYw\",\"round\":\"Spinner_round__owA1H\",\"Box\":\"Spinner_Box__3ecLL\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\nconst spinner = () =>(\r\n    <div className={classes.Box}>\r\n        <div className={classes.Loader}>Loading...</div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;","import React,{Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxillary/Auxillary';\r\n\r\nconst withErrorHandler = (WrappedComponent,axios)=>{\r\n    return class extends Component{\r\n        state={\r\n            error:null\r\n        }\r\n        componentDidMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req=>{\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res=>res,err =>{\r\n                this.setState({error:err});\r\n            });\r\n        }\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error:null})\r\n        }\r\n        render(){\r\n            console.log(\"error Handler\");\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error?this.state.error.message:null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n    let ingredient = null;\r\n    switch(this.props.type){\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient=null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type:PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props)=>{\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey=>{\r\n        return [...Array(props.ingredients[igKey])].map((_,i)=>{\r\n            return <BurgerIngredient key={igKey+i} type={igKey} />\r\n        })\r\n    }).reduce((arr,el)=>{\r\n        return arr.concat(el);\r\n    },[]);//Array inside array-->single array\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(burger);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3U59s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__u69O6\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1F3op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__q5bOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3Oi_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3e-UK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1kn9G\"};","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nconst logo = (props)=>(\r\n    <div className={classes.Logo} style={{height:props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\nconst navigationItem = (props)=>(\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link} \r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nconst navigationItems = (props) =>(\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated?<NavigationItem link=\"/orders\">Orders</NavigationItem>:null}\r\n        {!props.isAuthenticated ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>:<NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nconst drawerToggle = (props) =>(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nconst toolbar =(props) =>(\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n        \r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\n\r\n\r\nconst sideDrawer = (props) =>{\r\n    let attachedClasses = [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses=[classes.SideDrawer,classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../Auxillary/Auxillary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\n//const layout =(props) =>(\r\nclass Layout extends Component{\r\n\r\n    state={\r\n        showSideDrawer:false\r\n    }\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n    sideDrawerToggleHandler = () =>{\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer:!this.state.showSideDrawer};\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <Aux>\r\n                <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main> \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        isAuthenticated:state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\nconst buildControl = (props)=>{\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}>\r\n                Less\r\n            </button>\r\n            <button className={classes.More} onClick={props.added}>More</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    {label:'Salad',type:'salad'},\r\n    {label:'Bacon',type:'bacon'},\r\n    {label:'Cheese',type:'cheese'},\r\n    {label:'Meat',type:'meat'},\r\n];\r\n\r\nconst buildControls = (props)=>(\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: Rs <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl=>(\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={()=>props.ingredientAdded(ctrl.type)}\r\n            removed={()=>props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>\r\n            {props.isAuth ? 'ORDER NOW':'SIGN UP TO ORDER'}\r\n        </button>\r\n    </div>\r\n);\r\nexport default buildControls;","import React,{Component} from 'react';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    render(){\r\n    const ingredientSummary = Object.keys(this.props.ingredients)\r\n    .map(igKey=>{\r\n        return <li key={igKey}><span style={{textTransform:'capitalize'}}>{igKey}</span>:{this.props.ingredients[igKey]}</li>\r\n    });\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: Rs {this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    )\r\n    }\r\n};\r\nexport default OrderSummary;","import React,{ Component } from \"react\";\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../../src/axios-order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\n//import * as actionTypes from '../../store/actions/actionsTypes';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    };\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum =Object.keys(ingredients)\r\n        .map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        return sum>0;\r\n    }\r\n\r\n    // addIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice+priceAddition;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount <= 0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice-priceDeduction;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n    purchaseHandler=()=>{\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing:true});\r\n        }else{\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    purchaseContinueHandler = () =>{\r\n        //alert('You continue!');\r\n        // this.setState({loading:true});\r\n        // const order ={\r\n        //     ingredients:this.state.ingredients,\r\n        //     price:this.state.totalPrice,\r\n        //     customer:{\r\n        //         name:'Vishu Saxena',\r\n        //         address:{\r\n        //             street:'Street -1 New Bay',\r\n        //             zipcode:'564646',\r\n        //             country:'INDIA'\r\n        //         },\r\n        //     email:'vishu@gmail.com',\r\n        //     deliveryMethod:'fastest'\r\n        //     }\r\n        // }\r\n        // axios.post('/orders.json',order)\r\n        // .then(response=>{\r\n        //     console.log(response);\r\n        //     this.setState({loading:false,purchasing:false});\r\n        // })\r\n        // .catch(err=>{\r\n        //     this.setState({loading:false,purchasing:false});\r\n        //     console.log(err);\r\n        // });  \r\n        // const queryParams =[];\r\n        // for(let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price='+this.props.price);\r\n        // const queryString = queryParams.join('&');\r\n        // this.props.history.push({\r\n        //     pathname:'/checkout',\r\n        //     search:'?'+queryString\r\n        // });\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0;\r\n        }\r\n        let Ordersummary = null;\r\n        let burger =this.props.error?<p>Ingredients can't be loaded!</p>:<Spinner />;\r\n        if(this.props.ings){\r\n            burger =(<Aux>\r\n                <Burger ingredients={this.props.ings}/>\r\n                <BuildControls \r\n                ingredientAdded={this.props.onIngredientAdded}\r\n                ingredientRemoved={this.props.onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                ordered={this.purchaseHandler}\r\n                isAuth={this.props.isAuthenticated}\r\n                price={this.props.price}/>\r\n            </Aux>\r\n            );\r\n            Ordersummary = (<OrderSummary ingredients={this.props.ings} price={this.props.price} purchaseCancelled={this.purchaseCancelHandler}purchaseContinued={this.purchaseContinueHandler}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                    {Ordersummary}\r\n                </Modal>\r\n                {burger}    \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice, \r\n        error:state.burgerBuilder.error,\r\n        isAuthenticated:state.auth.token !== null,\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onIngredientAdded:(ingName) =>dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved:(ingName) =>dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients:() =>dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase:()=>dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath:(path)=>dispatch(burgerBuilderActions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import React , {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout(); \r\n    }\r\n    render(){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n            onLogout: () =>dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n        \r\n        render () {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React,{Component} from 'react';\nimport {Route,withRouter,Switch,Redirect} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport {connect} from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(()=>{\n  return import('./containers/Checkout/Checkout')\n});\nconst asyncOrders = asyncComponent(()=>{\n  return import('./containers/Orders/Orders')\n});\nconst asyncAuth = asyncComponent(()=>{\n  return import('./containers/Auth/Auth')\n})\n\nclass App extends Component{\n//function App(props) {\n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n  render(){\n    let routes = (\n      <Switch>\n      <Route path=\"/auth\" component={asyncAuth} />\n      <Route path=\"/\"  component={BurgerBuilder} />\n      <Redirect to=\"/\"/>\n      </Switch>\n    );\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <div >\n        <Layout>\n          {routes}\n          \n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onTryAutoSignup:() =>dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:10,\r\n    cheese:15,\r\n    meat:25,\r\n    bacon:18\r\n};\r\n\r\nconst initialState={\r\n    ingredients:null,\r\n    totalPrice:40,\r\n    error:false,\r\n    building:false\r\n};\r\n\r\nconst addIngredient = (state,action) =>{\r\n    const updatedIngredient = {[action.ingredientName]:state.ingredients[action.ingredientName]+1};\r\n            const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n            const updatedState = {\r\n                ingredients:updatedIngredients,\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building:true\r\n            }\r\n            return updateObject(state,updatedState);\r\n}\r\nconst removeIngredient = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        ingredients:{\r\n            ...state.ingredients,\r\n            [action.ingredientName]:state.ingredients[action.ingredientName]-1\r\n        },\r\n        totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    };\r\n}\r\nconst setIngredient = (state,action) =>{\r\n    return updateObject (state,{\r\n        ingredients:{\r\n            salad:action.ingredients.salad,\r\n            bacon:action.ingredients.bacon,\r\n            cheese:action.ingredients.cheese,\r\n            meat:action.ingredients.meat,\r\n        },\r\n        totalPrice:40,\r\n        error:false,\r\n        building:false\r\n    });\r\n}\r\nconst fetchIngredientFailed = (state,action) =>{\r\n    return updateObject(state,{error:true});\r\n}\r\n\r\nconst reducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state,action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredient(state,action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientFailed(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders:[],\r\n    loading:false,\r\n    purchased:false\r\n};\r\n\r\nconst purchaseInit = (state,action) =>{\r\n    return updateObject(state,{purchased:false});\r\n}\r\nconst puchaseBurgerStart = (state,action) =>{\r\n    return updateObject(state,{loading:true});\r\n}\r\nconst purchaseBurgerSuccess = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false,\r\n        purchased:true,\r\n        orders:[...state.orders,{...action.orderData,id:action.orderId}]\r\n    };\r\n}\r\nconst purchaseBurgerFail = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false\r\n    };\r\n}\r\nconst fetchOrderSuccess = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        orders:action.orders,\r\n        loading:false\r\n    };\r\n}\r\nconst fetchOrderFail = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false \r\n    };\r\n}\r\nconst fetchOrderStart = (state,action) =>{\r\n    return{\r\n        ...state,\r\n        loading:true\r\n    };\r\n};\r\n\r\n const reducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return puchaseBurgerStart(state,action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state,action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state,action);\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state,action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrderStart(state,action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n           return fetchOrderSuccess(state,action);\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrderFail(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n    authRedirectPath:'/'\r\n}\r\n\r\nconst authStart = (state,action) =>{\r\n    return updateObject(state,{error:null,loading:true})\r\n}\r\n\r\nconst authSuccess = (state,action) =>{\r\n    return updateObject(state,{\r\n        token:action.idToken.toString(),\r\n        userId:action.userId,\r\n        error:null,\r\n        loading:false\r\n    });\r\n}\r\n\r\nconst authLogout = (state,action) =>{\r\n    return updateObject(state,{token:null,userId:null,authRedirectPath:'/'});\r\n}\r\n\r\nconst authFail = (state,action) =>{\r\n    return updateObject(state,{\r\n        error:action.error,\r\n        loading:false\r\n    })\r\n}\r\n\r\nconst setAuthRedirectPath = (state,action)=>{\r\n    return updateObject(state,{authRedirectPath:action.path});\r\n}\r\n\r\nconst reducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state,action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state; \r\n    };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore , applyMiddleware , compose,combineReducers} from 'redux';\nimport {Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = process.env.NODE_ENV==='development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder:burgerBuilderReducer,\n  order:orderReducer,\n  auth:authReducer\n});\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}