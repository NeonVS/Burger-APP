{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"kLAyBeA,EAvBD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CAACC,KAAKF,EAAeG,OAAOL,EAAMC,YAAYC,KAEnE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,MAAO,CAACC,cAAc,aACnCC,QAAQ,QACRC,OAAO,QACPC,OAAO,iBACPC,QAAQ,OACRC,IAAKP,EAAGJ,MAAOI,EAAGJ,KALX,KAKmBI,EAAGH,OALtB,SAQX,OACA,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,sCAAaa,OAAOC,WAAWpB,EAAMqB,OAAQC,QAAQ,O,wCCbjEC,E,kLAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAMF,KAAKxB,MAAM2B,U,+BAIrD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAcb,OAbIL,KAAKxB,MAAM8B,UACXF,EACI,6BACCJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAAK,OACxB,kBAACmB,EAAD,CACAH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,aAOrBO,M,GAtBSI,aA0CNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAOM,EAAMnC,MAAM6B,OACnBE,QAAQI,EAAMnC,MAAM+B,QACpBJ,MAAMQ,EAAMC,KAAKT,MACjBC,OAAOO,EAAMC,KAAKR,WAIC,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAMC,GAAP,OAAiBS,EAASC,IAAoBX,EAAMC,QAI5DM,CAA4CK,YAAiBf,EAAOgB,O,mBChDnFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.ac9e4bd8.chunk.js","sourcesContent":["import React  from 'react';\r\nimport classes from './Order.module.css';\r\nconst order = (props)=>{\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({name:ingredientName,amount:props.ingredients[ingredientName]});\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span style={{textTransform:'capitalize',\r\n        display:'block',\r\n        margin:'0 8px',\r\n        border:'1px solid #ccc',\r\n        padding:'5px'}}\r\n        key={ig.name}>{ig.name} ({ig.amount}) </span>;\r\n    })\r\n\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>Rs {(Number.parseFloat(props.price)).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React , {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from'../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token,this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading){\r\n            orders = (\r\n                <div>\r\n                {this.props.orders.map(order =>(\r\n                    <Order \r\n                    key={order.id} \r\n                    ingredients={order.ingredients}\r\n                    price={order.price}/>\r\n                ))\r\n                }\r\n            </div>\r\n            );\r\n        }\r\n        return(\r\n            orders\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onFetchOrders: (token,userId) =>dispatch(actions.fetchOrders(token,userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2kEmm\"};"],"sourceRoot":""}