{"ast":null,"code":"import*as actionTypes from'./actionTypes';import axios from'axios';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token,userId){return{type:actionTypes.AUTH_SUCCESS,idToken:token,userId:userId};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},+expirationTime*1000);};};export var logout=function logout(){localStorage.removeItem('token');localStorage.removeItem('expirationDate');localStorage.removeItem('userId');return{type:actionTypes.AUTH_LOGOUT};};export var setAuthRedirectPath=function setAuthRedirectPath(path){return{type:actionTypes.SET_AUTH_REDIRECT_PATH,path:path};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(!token){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate>new Date()){var userId=localStorage.getItem('userId');dispatch(authSuccess(token,userId));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}else{dispatch(logout());}}};};export var auth=function auth(email,password,isSignup){return function(dispatch){dispatch(authStart());var authData={email:email,password:password,returnSecureToken:true};var url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';if(!isSignup){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';}axios.post(url,authData).then(function(response){var expirationDate=new Date(new Date().getTime()+response.data.expiresIn*1000);localStorage.setItem('token',response.data.idToken);localStorage.setItem('expirationDate',expirationDate);localStorage.setItem('userId',response.data.localId);dispatch(authSuccess(response.data.idToken,response.data.localId));dispatch(checkAuthTimeout(response.data.expiresIn));}).catch(function(err){return dispatch(authFail(err.response.data.error));});};};","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","AUTH_LOGOUT","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem","expirationDate","Date","getTime","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","data","expiresIn","setItem","localId","catch","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token,userId) =>{\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) =>{\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        },+expirationTime*1000)\r\n    };\r\n};\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) =>{\r\n    return {\r\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate >new Date()){\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token,userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));\r\n            }else{\r\n                dispatch(logout());\r\n            }\r\n            \r\n        }\r\n    };\r\n}\r\n\r\nexport const auth =(email,password,isSignup) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true,\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        if(!isSignup){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        }\r\n        axios.post(url,authData).then(response =>{\r\n            const expirationDate = new Date(new Date().getTime()+response.data.expiresIn*1000);\r\n            localStorage.setItem('token',response.data.idToken);\r\n            localStorage.setItem('expirationDate',expirationDate);\r\n            localStorage.setItem('userId',response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        }).catch(err =>\r\n            dispatch(authFail(err.response.data.error))\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}