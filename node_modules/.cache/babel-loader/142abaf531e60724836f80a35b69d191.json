{"ast":null,"code":"import _defineProperty from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Input from'../../components/UI/Input/Input';import Button from'../../components/UI/Button/Button';import classes from'./Auth.module.css';import Spinner from'../../components/UI/Spinner/Spinner';import*as actions from'../../store/actions/index';import{Redirect,withRouter}from'react-router-dom';import{connect}from'react-redux';import{checkValidity}from'../../shared/utility';var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={controls:{email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your Mail'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},password:{elementType:'input',elementConfig:{type:'password',placeholder:'Password'},value:'',validation:{required:true,minLength:6},valid:false,touched:false}},isSignup:true};_this.inputChangedHandler=function(event,controlName){var updatedControls=_objectSpread({},_this.state.controls,_defineProperty({},controlName,_objectSpread({},_this.state.controls[controlName],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.controls[controlName].validation),touched:true})));_this.setState({controls:updatedControls});};_this.submitHandler=function(event){event.preventDefault();_this.props.onAuth(_this.state.controls.email.value,_this.state.controls.password.value,_this.state.isSignup);};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignup:!prevState.isSignup};});};return _this;}_createClass(Auth,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.buildingBurger&&this.props.authRedirectPath!=='/'){this.props.onSetRedirectPath();}}},{key:\"render\",value:function render(){var _this2=this;var formElementArray=[];for(var key in this.state.controls){formElementArray.push({id:key,config:this.state.controls[key]});}var form=formElementArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,shouldValidate:formElement.configvalidation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);},invalid:!formElement.config.valid});});if(this.props.loading){form=/*#__PURE__*/React.createElement(Spinner,null);}var errorMessage=null;if(this.props.error){errorMessage=/*#__PURE__*/React.createElement(\"p\",null,this.props.error.message);}var authRedirect=null;if(this.props.isAuthenticated){authRedirect=/*#__PURE__*/React.createElement(Redirect,{to:this.props.authRedirectPath});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.Auth},authRedirect,errorMessage,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.submitHandler},form,/*#__PURE__*/React.createElement(Button,{btnType:\"Success\"},\"SUBMIT\")),/*#__PURE__*/React.createElement(Button,{clicked:this.switchAuthModeHandler,btnType:\"Danger\"},\"SWITCH TO \",this.state.isSignup?'SIGNIN':'SIGNUP'));}}]);return Auth;}(Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,isAuthenticated:state.auth.token!=null,buildingBurger:state.burgerBuilder.building,authRedirectPath:state.auth.authRedirectPath};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignup){return dispatch(actions.auth(email,password,isSignup));},onSetRedirectPath:function onSetRedirectPath(){return dispatch(actions.setAuthRedirectPath('/'));}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Auth));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","Spinner","actions","Redirect","withRouter","connect","checkValidity","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","buildingBurger","authRedirectPath","onSetRedirectPath","formElementArray","key","push","id","config","form","map","formElement","configvalidation","loading","errorMessage","error","message","authRedirect","isAuthenticated","mapStateToProps","auth","token","burgerBuilder","building","mapDispatchToProps","dispatch","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\nimport {Redirect,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {checkValidity} from '../../shared/utility';\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your Mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        isSignup:true\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event,controlName) =>{\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        };\r\n        this.setState({controls:updatedControls});\r\n    }\r\n\r\n    submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup)\r\n    }\r\n\r\n    switchAuthModeHandler = () =>{\r\n        this.setState(prevState =>{\r\n            return {isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetRedirectPath();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            });\r\n        }\r\n        let form = formElementArray.map(formElement => (\r\n            <Input  \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value} \r\n                shouldValidate={formElement.configvalidation}\r\n                touched={formElement.config.touched}\r\n                changed={(event)=>this.inputChangedHandler(event,formElement.id)}\r\n                invalid={!formElement.config.valid}/>\r\n        ));\r\n        if(this.props.loading){\r\n            form=<Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage=(\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath }/>\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN':'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuthenticated :state.auth.token !=null,\r\n        buildingBurger:state.burgerBuilder.building,\r\n        authRedirectPath:state.auth.authRedirectPath\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onAuth:(email,password,isSignup)=>dispatch(actions.auth(email,password,isSignup)),\r\n        onSetRedirectPath:() =>dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Auth));"]},"metadata":{},"sourceType":"module"}