{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Auxillary/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../../src/axios-order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nconst INGREDIENT_PRICES = {\n  salad: 10,\n  cheese: 15,\n  meat: 25,\n  bacon: 18\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 50,\n      purchaseable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You continue!');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Vishu Saxena',\n          address: {\n            street: 'Street -1 New Bay',\n            zipcode: '564646',\n            country: 'INDIA'\n          },\n          email: 'vishu@gmail.com',\n          deliveryMethod: 'fastest'\n        }\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n        console.log(err);\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    console.log(sum > 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let OrderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    });\n\n    if (this.state.loading) {\n      OrderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, OrderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchaseable: this.state.purchaseable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipcode","country","email","deliveryMethod","post","then","response","console","log","catch","err","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../../src/axios-order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:10,\r\n    cheese:15,\r\n    meat:25,\r\n    bacon:18\r\n};\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        ingredients:{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice: 50,\r\n        purchaseable:false,\r\n        purchasing:false,\r\n        loading:false\r\n    };\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum =Object.keys(ingredients)\r\n        .map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        console.log(sum>0);\r\n        this.setState({purchaseable:sum>0});\r\n    }\r\n\r\n    addIngredientHandler = (type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice+priceAddition;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice-priceDeduction;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    purchaseContinueHandler = () =>{\r\n        //alert('You continue!');\r\n        this.setState({loading:true});\r\n        const order ={\r\n            ingredients:this.state.ingredients,\r\n            price:this.state.totalPrice,\r\n            customer:{\r\n                name:'Vishu Saxena',\r\n                address:{\r\n                    street:'Street -1 New Bay',\r\n                    zipcode:'564646',\r\n                    country:'INDIA'\r\n                },\r\n            email:'vishu@gmail.com',\r\n            deliveryMethod:'fastest'\r\n            }\r\n        }\r\n        axios.post('/orders.json',order)\r\n        .then(response=>{\r\n            console.log(response);\r\n            this.setState({loading:false,purchasing:false});\r\n        })\r\n        .catch(err=>{\r\n            this.setState({loading:false,purchasing:false});\r\n            console.log(err);\r\n        });\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0;\r\n        }\r\n        let OrderSummary = (<OrderSummary \r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}/>);\r\n        \r\n        if(this.state.loading){\r\n            OrderSummary = <Spinner />;\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                    {OrderSummary}\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls \r\n                ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                purchaseable={this.state.purchaseable}\r\n                ordered={this.purchaseHandler}\r\n                price={this.state.totalPrice}/>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nexport  default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}