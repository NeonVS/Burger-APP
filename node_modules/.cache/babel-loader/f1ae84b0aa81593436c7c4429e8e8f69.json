{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, this.props.orders.map(order => /*#__PURE__*/React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","connect","Spinner","Orders","componentDidMount","props","fetchOrders","render","orders","map","order","id","ingredients","price","mapStateToProps","state","loading","mapDispatchToProps","dispatch","onFetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,gBAAP,MAA4B,6CAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA8B;AAE1BQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,WAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,iBACxB,oBAAC,KAAD;AACA,MAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,MAAA,WAAW,EAAED,KAAK,CAACE,WAFnB;AAGA,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAWH;;AAlByB;;AAqB9B,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHP,IAAAA,MAAM,EAACO,KAAK,CAACL,KAAN,CAAYF,MADhB;AAEHQ,IAAAA,OAAO,EAACD,KAAK,CAACL,KAAN,CAAYM;AAFjB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AAClC,SAAO;AACHC,IAAAA,aAAa,EAAE,MAAKD,QAAQ,CAAClB,OAAO,CAACM,WAAR,EAAD;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiClB,gBAAgB,CAACI,MAAD,EAAQL,KAAR,CAAjD,CAAf","sourcesContent":["import React , {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from'../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchOrders();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.orders.map(order =>(\r\n                    <Order \r\n                    key={order.id} \r\n                    ingredients={order.ingredients}\r\n                    price={order.price}/>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        orders:state.order.orders,\r\n        loading:state.order.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onFetchOrders: () =>dispatch(actions.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(withErrorHandler(Orders,axios));"]},"metadata":{},"sourceType":"module"}