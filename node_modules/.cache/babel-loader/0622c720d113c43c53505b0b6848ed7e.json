{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {}, expirationTime);\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\n\n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\n    }\n\n    axios.post(url, authData).then(response => {\n      console.log(response.data);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(err => dispatch(authFail(err.response.data.error)));\n  };\n};","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","AUTH_LOGOUT","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","data","localId","expiresIn","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAACH,WAAW,CAACI;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAACH,WAAW,CAACQ,YADd;AAEHC,IAAAA,OAAO,EAACH,KAFL;AAGHC,IAAAA,MAAM,EAACA;AAHJ,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHR,IAAAA,IAAI,EAACH,WAAW,CAACY,SADd;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAGC,cAAc,IAAG;AAC7C,SAAOC,QAAQ,IAAG;AACdC,IAAAA,UAAU,CAAC,MAAI,CAAE,CAAP,EAAQF,cAAR,CAAV;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMG,MAAM,GAAG,MAAK;AACvB,SAAO;AACHd,IAAAA,IAAI,EAACH,WAAW,CAACkB;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,IAAI,GAAE,CAACC,KAAD,EAAOC,QAAP,EAAgBC,QAAhB,KAA4B;AAC3C,SAAOP,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACA,UAAMqB,QAAQ,GAAC;AACXH,MAAAA,KAAK,EAACA,KADK;AAEXC,MAAAA,QAAQ,EAACA,QAFE;AAGXG,MAAAA,iBAAiB,EAAC;AAHP,KAAf;AAKA,QAAIC,GAAG,GAAG,uGAAV;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAE,mHAAL;AACH;;AACDxB,IAAAA,KAAK,CAACyB,IAAN,CAAWD,GAAX,EAAeF,QAAf,EAAyBI,IAAzB,CAA8BC,QAAQ,IAAG;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAhB,MAAAA,QAAQ,CAACV,WAAW,CAACuB,QAAQ,CAACG,IAAT,CAActB,OAAf,EAAuBmB,QAAQ,CAACG,IAAT,CAAcC,OAArC,CAAZ,CAAR;AACAjB,MAAAA,QAAQ,CAACF,gBAAgB,CAACe,QAAQ,CAACG,IAAT,CAAcE,SAAf,CAAjB,CAAR;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IACRpB,QAAQ,CAACL,QAAQ,CAACyB,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBpB,KAAnB,CAAT,CALZ;AAOH,GAlBD;AAmBH,CApBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token,userId) =>{\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) =>{\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{},expirationTime)\r\n    };\r\n};\r\n\r\nexport const logout = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const auth =(email,password,isSignup) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true,\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        if(!isSignup){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        }\r\n        axios.post(url,authData).then(response =>{\r\n            console.log(response.data);\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        }).catch(err =>\r\n            dispatch(authFail(err.response.data.error))\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}