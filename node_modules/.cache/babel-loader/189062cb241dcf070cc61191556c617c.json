{"ast":null,"code":"import _defineProperty from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Button from'../../../components/UI/Button/Button';import classes from'./ContactData.module.css';import axios from'../../../axios-order';import Spinner from'../../../components/UI/Spinner/Spinner';import Input from'../../../components/UI/Input/Input';import withErrorHandler from'../../../hoc/withErrorHandler/withErrorHandler';import{connect}from'react-redux';import*as actions from'../../../store/actions/index';import{updateObject,checkValidity}from'../../../shared/utility';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);var _super=_createSuper(ContactData);function ContactData(){var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your Name'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'Street'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'ZIP CODE'},value:'',validation:{required:true,minLength:6,maxLength:6},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'Country'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your E-Mail'},value:'',validation:{required:true},valid:false,touched:false},deliveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',displayValue:'Fastest'},{value:'cheapest',displayValue:'Cheapest'}]},value:'fastest',validation:{},valid:true}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();_this.setState({loading:true});var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier];}var order={ingredients:_this.props.ings,price:_this.props.price,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.orderForm[inputIdentifier].validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));//  const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n//  updatedFormElement.value = event.target.value;\n//  updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\n//  updatedFormElement.touched = true;\n//updatedOrderForm[inputIdentifier] = updatedFormElement;\nvar formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElementArray=[];for(var key in this.state.orderForm){formElementArray.push({id:key,config:this.state.orderForm[key]});}var form=/*#__PURE__*/React.createElement(\"form\",null,formElementArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);},invalid:!formElement.config.valid});}),/*#__PURE__*/React.createElement(Button,{btnType:\"Success\",clicked:this.orderHandler,disabled:!this.state.formIsValid},\"ORDER\"));if(this.props.loading){form=/*#__PURE__*/React.createElement(Spinner,null);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.ContactData},/*#__PURE__*/React.createElement(\"h4\",null,\"Enter your Contact Data\"),form);}}]);return ContactData;}(Component);var mapStateToProps=function mapStateToProps(state){return{ings:state.burgerBuilder.ingredients,price:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(actions.purchaseBurger(orderData,token));}};};export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","withErrorHandler","connect","actions","updateObject","checkValidity","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","setState","loading","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","formElementArray","key","push","id","config","form","map","formElement","mapStateToProps","burgerBuilder","totalPrice","auth","mapDispatchToProps","dispatch","purchaseBurger"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-order';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {updateObject,checkValidity} from '../../../shared/utility';\r\nclass ContactData extends Component{\r\n    state={\r\n        orderForm:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zipCode:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP CODE'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6,\r\n                    maxLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your E-Mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod:{\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options:[\r\n                        {value:'fastest',displayValue:'Fastest'},\r\n                        {value:'cheapest',displayValue:'Cheapest'},]\r\n                },\r\n                value:'fastest',\r\n                validation:{},\r\n                valid:true\r\n            }\r\n        },\r\n            formIsValid:false\r\n    }\r\n    orderHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({loading:true});\r\n        let formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier];\r\n        }\r\n        const order ={\r\n            ingredients:this.props.ings,\r\n            price:this.props.price,\r\n            orderData:formData,\r\n            userId:this.props.userId  \r\n        };\r\n        this.props.onOrderBurger(order,this.props.token);\r\n    }\r\n\r\n    inputChangedHandler = (event,inputIdentifier)=>{\r\n         \r\n         const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier],{\r\n            value: event.target.value,\r\n            valid:checkValidity(event.target.value,this.state.orderForm[inputIdentifier].validation),\r\n            touched:true\r\n         });\r\n         const updatedOrderForm = updateObject(this.state.orderForm,{\r\n             [inputIdentifier]:updatedFormElement\r\n         })\r\n        //  const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\r\n        //  updatedFormElement.value = event.target.value;\r\n        //  updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        //  updatedFormElement.touched = true;\r\n        //updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n         let formIsValid = true;\r\n         for(let inputIdentifier in updatedOrderForm){\r\n             formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n         }\r\n         this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});\r\n    }\r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n        <form>\r\n            {formElementArray.map(formElement =>(\r\n                <Input \r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value} \r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event)=>this.inputChangedHandler(event,formElement.id)}\r\n                    invalid={!formElement.config.valid}/>\r\n            ))}\r\n            <Button btnType=\"Success\" clicked={this.orderHandler} disabled={!this.state.formIsValid}>ORDER</Button>\r\n        </form>\r\n        );\r\n        if(this.props.loading){\r\n            form =<Spinner />\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    };\r\n}   \r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));"]},"metadata":{},"sourceType":"module"}