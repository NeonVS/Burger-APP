{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst INGREDIENT_PRICES = {\n  salad: 10,\n  cheese: 15,\n  meat: 25,\n  bacon: 18\n};\nconst initialState = {\n  ingredients: null,\n  totalPrice: 40,\n  error: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 40,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","ingredients","totalPrice","error","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,iBAAiB,GAAC;AACpBC,EAAAA,KAAK,EAAC,EADc;AAEpBC,EAAAA,MAAM,EAAC,EAFa;AAGpBC,EAAAA,IAAI,EAAC,EAHe;AAIpBC,EAAAA,KAAK,EAAC;AAJc,CAAxB;AAOA,MAAMC,YAAY,GAAC;AACfC,EAAAA,WAAW,EAAC,IADG;AAEfC,EAAAA,UAAU,EAAC,EAFI;AAGfC,EAAAA,KAAK,EAAC;AAHS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA8B;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,WAAW,CAACe,cAAjB;AACI,YAAMC,iBAAiB,GAAG;AAAC,SAACH,MAAM,CAACI,cAAR,GAAwBL,KAAK,CAACJ,WAAN,CAAkBK,MAAM,CAACI,cAAzB,IAAyC;AAAlE,OAA1B;AACA,YAAMC,kBAAkB,GAAGjB,YAAY,CAACW,KAAK,CAACJ,WAAP,EAAmBQ,iBAAnB,CAAvC;AACA,YAAMG,YAAY,GAAG;AACjBX,QAAAA,WAAW,EAACU,kBADK;AAEjBT,QAAAA,UAAU,EAACG,KAAK,CAACH,UAAN,GAAmBP,iBAAiB,CAACW,MAAM,CAACI,cAAR;AAF9B,OAArB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAOO,YAAP,CAAnB;;AACJ,SAAKnB,WAAW,CAACoB,iBAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHJ,QAAAA,WAAW,EAAC,EACR,GAAGI,KAAK,CAACJ,WADD;AAER,WAACK,MAAM,CAACI,cAAR,GAAwBL,KAAK,CAACJ,WAAN,CAAkBK,MAAM,CAACI,cAAzB,IAAyC;AAFzD,SAFT;AAMHR,QAAAA,UAAU,EAACG,KAAK,CAACH,UAAN,GAAmBP,iBAAiB,CAACW,MAAM,CAACI,cAAR;AAN5C,OAAP;;AAQJ,SAAKjB,WAAW,CAACqB,eAAjB;AACI,aAAO,EACH,GAAGT,KADA;AAEHJ,QAAAA,WAAW,EAAC;AACRL,UAAAA,KAAK,EAACU,MAAM,CAACL,WAAP,CAAmBL,KADjB;AAERG,UAAAA,KAAK,EAACO,MAAM,CAACL,WAAP,CAAmBF,KAFjB;AAGRF,UAAAA,MAAM,EAACS,MAAM,CAACL,WAAP,CAAmBJ,MAHlB;AAIRC,UAAAA,IAAI,EAACQ,MAAM,CAACL,WAAP,CAAmBH;AAJhB,SAFT;AAQHI,QAAAA,UAAU,EAAC,EARR;AASHC,QAAAA,KAAK,EAAC;AATH,OAAP;;AAWJ,SAAKV,WAAW,CAACsB,wBAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,KAAK,EAAC;AAFH,OAAP;;AAIJ;AACI,aAAOE,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:10,\r\n    cheese:15,\r\n    meat:25,\r\n    bacon:18\r\n};\r\n\r\nconst initialState={\r\n    ingredients:null,\r\n    totalPrice:40,\r\n    error:false\r\n};\r\n\r\nconst reducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            const updatedIngredient = {[action.ingredientName]:state.ingredients[action.ingredientName]+1};\r\n            const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n            const updatedState = {\r\n                ingredients:updatedIngredients,\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state,updatedState);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName]-1\r\n                },\r\n                totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    salad:action.ingredients.salad,\r\n                    bacon:action.ingredients.bacon,\r\n                    cheese:action.ingredients.cheese,\r\n                    meat:action.ingredients.meat,\r\n                },\r\n                totalPrice:40,\r\n                error:false\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error:true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}