{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Auxillary/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../../src/axios-order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nconst INGREDIENT_PRICES = {\n  salad: 10,\n  cheese: 15,\n  meat: 25,\n  bacon: 18\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 50,\n      purchaseable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You continue!');\n      // this.setState({loading:true});\n      // const order ={\n      //     ingredients:this.state.ingredients,\n      //     price:this.state.totalPrice,\n      //     customer:{\n      //         name:'Vishu Saxena',\n      //         address:{\n      //             street:'Street -1 New Bay',\n      //             zipcode:'564646',\n      //             country:'INDIA'\n      //         },\n      //     email:'vishu@gmail.com',\n      //     deliveryMethod:'fastest'\n      //     }\n      // }\n      // axios.post('/orders.json',order)\n      // .then(response=>{\n      //     console.log(response);\n      //     this.setState({loading:false,purchasing:false});\n      // })\n      // .catch(err=>{\n      //     this.setState({loading:false,purchasing:false});\n      //     console.log(err);\n      // });  \n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-app-6c70b.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    console.log(sum > 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let Ordersummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 38\n      }\n    }, \"Ingredients can't be loaded!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 74\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchaseable: this.state.purchaseable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }));\n      Ordersummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      Ordersummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 28\n        }\n      });\n    }\n\n    console.log(\"Burger Builder\");\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, Ordersummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actionTypes","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","get","then","response","data","catch","err","console","log","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","Ordersummary","burger","mapStateToProps","mapDispatchToProps","dispatch","onIngredientAdded","ingName","ADD_INGREDIENT","ingredientName","onIngredientRemoved","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../../src/axios-order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:10,\r\n    cheese:15,\r\n    meat:25,\r\n    bacon:18\r\n};\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        ingredients:null,\r\n        totalPrice: 50,\r\n        purchaseable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    };\r\n    componentDidMount(){\r\n        axios.get('https://burger-app-6c70b.firebaseio.com/ingredients.json').then(response => {\r\n            this.setState({ingredients:response.data})\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            this.setState({error:true});\r\n        });\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum =Object.keys(ingredients)\r\n        .map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        console.log(sum>0);\r\n        this.setState({purchaseable:sum>0});\r\n    }\r\n\r\n    addIngredientHandler = (type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice+priceAddition;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice-priceDeduction;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    purchaseContinueHandler = () =>{\r\n        //alert('You continue!');\r\n        // this.setState({loading:true});\r\n        // const order ={\r\n        //     ingredients:this.state.ingredients,\r\n        //     price:this.state.totalPrice,\r\n        //     customer:{\r\n        //         name:'Vishu Saxena',\r\n        //         address:{\r\n        //             street:'Street -1 New Bay',\r\n        //             zipcode:'564646',\r\n        //             country:'INDIA'\r\n        //         },\r\n        //     email:'vishu@gmail.com',\r\n        //     deliveryMethod:'fastest'\r\n        //     }\r\n        // }\r\n        // axios.post('/orders.json',order)\r\n        // .then(response=>{\r\n        //     console.log(response);\r\n        //     this.setState({loading:false,purchasing:false});\r\n        // })\r\n        // .catch(err=>{\r\n        //     this.setState({loading:false,purchasing:false});\r\n        //     console.log(err);\r\n        // });  \r\n        const queryParams =[];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price='+this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname:'/checkout',\r\n            search:'?'+queryString\r\n        });\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0;\r\n        }\r\n        let Ordersummary = null;\r\n        let burger =this.state.error?<p>Ingredients can't be loaded!</p>:<Spinner />;\r\n        if(this.props.ings){\r\n            burger =(<Aux>\r\n                <Burger ingredients={this.props.ings}/>\r\n                <BuildControls \r\n                ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                purchaseable={this.state.purchaseable}\r\n                ordered={this.purchaseHandler}\r\n                price={this.state.totalPrice}/>\r\n            </Aux>\r\n            );\r\n            Ordersummary = (<OrderSummary ingredients={this.props.ings} price={this.state.totalPrice} purchaseCancelled={this.purchaseCancelHandler}purchaseContinued={this.purchaseContinueHandler}/>\r\n            );\r\n        }\r\n        if(this.state.loading){\r\n            Ordersummary = <Spinner />;\r\n        }\r\n        console.log(\"Burger Builder\");\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                    {Ordersummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings:state.ingredients\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onIngredientAdded:(ingName) =>dispatch({type:actionTypes.ADD_INGREDIENT,ingredientName:ingName}),\r\n        onIngredientRemoved:(ingName) =>dispatch({type:actionTypes.REMOVE_INGREDIENT,ingredientName:ingName})\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}