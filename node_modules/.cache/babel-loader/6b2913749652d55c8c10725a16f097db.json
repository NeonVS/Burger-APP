{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Auxillary/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../../src/axios-order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchaseable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You continue!');\n      // this.setState({loading:true});\n      // const order ={\n      //     ingredients:this.state.ingredients,\n      //     price:this.state.totalPrice,\n      //     customer:{\n      //         name:'Vishu Saxena',\n      //         address:{\n      //             street:'Street -1 New Bay',\n      //             zipcode:'564646',\n      //             country:'INDIA'\n      //         },\n      //     email:'vishu@gmail.com',\n      //     deliveryMethod:'fastest'\n      //     }\n      // }\n      // axios.post('/orders.json',order)\n      // .then(response=>{\n      //     console.log(response);\n      //     this.setState({loading:false,purchasing:false});\n      // })\n      // .catch(err=>{\n      //     this.setState({loading:false,purchasing:false});\n      //     console.log(err);\n      // });  \n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.props.price);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-app-6c70b.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    console.log(sum > 0);\n    return sum > 0;\n  } // addIngredientHandler = (type)=>{\n  //     const oldCount = this.state.ingredients[type];\n  //     const updatedCount = oldCount + 1;\n  //     const updatedIngredients = {\n  //         ...this.state.ingredients\n  //     };\n  //     updatedIngredients[type] = updatedCount;\n  //     const priceAddition = INGREDIENT_PRICES[type];\n  //     const oldPrice = this.state.totalPrice;\n  //     const newPrice = oldPrice+priceAddition;\n  //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n  // removeIngredientHandler = (type)=>{\n  //     const oldCount = this.state.ingredients[type];\n  //     if(oldCount <= 0){\n  //         return;\n  //     }\n  //     const updatedCount = oldCount - 1;\n  //     const updatedIngredients = {\n  //         ...this.state.ingredients\n  //     };\n  //     updatedIngredients[type] = updatedCount;\n  //     const priceDeduction = INGREDIENT_PRICES[type];\n  //     const oldPrice = this.state.totalPrice;\n  //     const newPrice = oldPrice-priceDeduction;\n  //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n  //     this.updatePurchaseState(updatedIngredients);\n  // }\n\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let Ordersummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }\n    }, \"Ingredients can't be loaded!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 74\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchaseable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }));\n      Ordersummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      Ordersummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 28\n        }\n      });\n    }\n\n    console.log(\"Burger Builder\");\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, Ordersummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actionTypes","BurgerBuilder","state","purchaseable","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","props","price","queryString","join","history","pathname","search","componentDidMount","get","then","response","data","catch","err","console","log","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","Ordersummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;;AAGA,MAAMC,aAAN,SAA4BX,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACjCY,KADiC,GAC3B;AACFC,MAAAA,YAAY,EAAC,KADX;AAEFC,MAAAA,UAAU,EAAC,KAFT;AAGFC,MAAAA,OAAO,EAAC,KAHN;AAIFC,MAAAA,KAAK,EAAC;AAJJ,KAD2B;;AAAA,SAyDjCC,eAzDiC,GAyDjB,MAAI;AAChB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAC;AAAZ,OAAd;AACH,KA3DgC;;AAAA,SA4DjCK,qBA5DiC,GA4DX,MAAI;AACtB,WAAKD,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAC;AAAZ,OAAd;AACH,KA9DgC;;AAAA,SA+DjCM,uBA/DiC,GA+DP,MAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,WAAW,GAAE,EAAnB;;AACA,WAAI,IAAIC,CAAR,IAAa,KAAKV,KAAL,CAAWW,WAAxB,EAAoC;AAChCF,QAAAA,WAAW,CAACG,IAAZ,CAAiBC,kBAAkB,CAACH,CAAD,CAAlB,GAAsB,GAAtB,GAA0BG,kBAAkB,CAAC,KAAKb,KAAL,CAAWW,WAAX,CAAuBD,CAAvB,CAAD,CAA7D;AACH;;AACDD,MAAAA,WAAW,CAACG,IAAZ,CAAiB,WAAS,KAAKE,KAAL,CAAWC,KAArC;AACA,YAAMC,WAAW,GAAGP,WAAW,CAACQ,IAAZ,CAAiB,GAAjB,CAApB;AACA,WAAKH,KAAL,CAAWI,OAAX,CAAmBN,IAAnB,CAAwB;AACpBO,QAAAA,QAAQ,EAAC,WADW;AAEpBC,QAAAA,MAAM,EAAC,MAAIJ;AAFS,OAAxB;AAIH,KAnGgC;AAAA;;AAOjCK,EAAAA,iBAAiB,GAAE;AACf3B,IAAAA,KAAK,CAAC4B,GAAN,CAAU,0DAAV,EAAsEC,IAAtE,CAA2EC,QAAQ,IAAI;AACnF,WAAKlB,QAAL,CAAc;AAACK,QAAAA,WAAW,EAACa,QAAQ,CAACC;AAAtB,OAAd;AACH,KAFD,EAEGC,KAFH,CAESC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKrB,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAC;AAAP,OAAd;AACH,KALD;AAMH;;AAED0B,EAAAA,mBAAmB,CAACnB,WAAD,EAAa;AAC5B,UAAMoB,GAAG,GAAEC,MAAM,CAACC,IAAP,CAAYtB,WAAZ,EACVuB,GADU,CACNC,KAAK,IAAG;AACT,aAAOxB,WAAW,CAACwB,KAAD,CAAlB;AACH,KAHU,EAGRC,MAHQ,CAGD,CAACL,GAAD,EAAKM,EAAL,KAAU;AAChB,aAAON,GAAG,GAACM,EAAX;AACH,KALU,EAKT,CALS,CAAX;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,GAAC,CAAhB;AACA,WAAOA,GAAG,GAAC,CAAX;AACH,GAzBgC,CA2BjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA4CAO,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,GAAG,EACjB,GAAG,KAAKzB,KAAL,CAAW0B;AADG,KAArB;;AAGA,SAAI,IAAIC,GAAR,IAAeF,YAAf,EAA4B;AACxBA,MAAAA,YAAY,CAACE,GAAD,CAAZ,GAAoBF,YAAY,CAACE,GAAD,CAAZ,IAAoB,CAAxC;AACH;;AACD,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,MAAM,GAAE,KAAK3C,KAAL,CAAWI,KAAX,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAjB,gBAAqD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE;;AACA,QAAG,KAAKU,KAAL,CAAW0B,IAAd,EAAmB;AACfG,MAAAA,MAAM,gBAAG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAK7B,KAAL,CAAW0B,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,eAEL,oBAAC,aAAD;AACA,QAAA,eAAe,EAAE,KAAK1B,KAAL,CAAW8B,iBAD5B;AAEA,QAAA,iBAAiB,EAAE,KAAK9B,KAAL,CAAW+B,mBAF9B;AAGA,QAAA,QAAQ,EAAEN,YAHV;AAIA,QAAA,YAAY,EAAE,KAAKT,mBAAL,CAAyB,KAAKhB,KAAL,CAAW0B,IAApC,CAJd;AAKA,QAAA,OAAO,EAAE,KAAKnC,eALd;AAMA,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWC,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,CAAT;AAWA2B,MAAAA,YAAY,gBAAI,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAK5B,KAAL,CAAW0B,IAAtC;AAA4C,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,KAA9D;AAAqE,QAAA,iBAAiB,EAAE,KAAKR,qBAA7F;AAAmH,QAAA,iBAAiB,EAAE,KAAKC,uBAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AAEH;;AACD,QAAG,KAAKR,KAAL,CAAWG,OAAd,EAAsB;AAClBuC,MAAAA,YAAY,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AACDd,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACA,MAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWE,UADjB;AAEA,MAAA,WAAW,EAAE,KAAKK,qBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKmC,YAHL,CADJ,EAMKC,MANL,CADJ;AAUH;;AA1IgC;;AA6IrC,MAAMG,eAAe,GAAG9C,KAAK,IAAG;AAC5B,SAAO;AACHwC,IAAAA,IAAI,EAACxC,KAAK,CAACW,WADR;AAEHI,IAAAA,KAAK,EAACf,KAAK,CAAC+C;AAFT,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AAClC,SAAO;AACHL,IAAAA,iBAAiB,EAAEM,OAAD,IAAYD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACrD,WAAW,CAACsD,cAAlB;AAAiCC,MAAAA,cAAc,EAACH;AAAhD,KAAD,CADnC;AAEHL,IAAAA,mBAAmB,EAAEK,OAAD,IAAYD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACrD,WAAW,CAACwD,iBAAlB;AAAoCD,MAAAA,cAAc,EAACH;AAAnD,KAAD;AAFrC,GAAP;AAIH,CALD;;AAQA,eAAgBrD,OAAO,CAACiD,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CpD,gBAAgB,CAACG,aAAD,EAAeL,KAAf,CAA5D,CAAhB","sourcesContent":["import React,{ Component } from \"react\";\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../../src/axios-order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        purchaseable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    };\r\n    componentDidMount(){\r\n        axios.get('https://burger-app-6c70b.firebaseio.com/ingredients.json').then(response => {\r\n            this.setState({ingredients:response.data})\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            this.setState({error:true});\r\n        });\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum =Object.keys(ingredients)\r\n        .map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0);\r\n        console.log(sum>0);\r\n        return sum>0;\r\n    }\r\n\r\n    // addIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice+priceAddition;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount <= 0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice-priceDeduction;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    purchaseContinueHandler = () =>{\r\n        //alert('You continue!');\r\n        // this.setState({loading:true});\r\n        // const order ={\r\n        //     ingredients:this.state.ingredients,\r\n        //     price:this.state.totalPrice,\r\n        //     customer:{\r\n        //         name:'Vishu Saxena',\r\n        //         address:{\r\n        //             street:'Street -1 New Bay',\r\n        //             zipcode:'564646',\r\n        //             country:'INDIA'\r\n        //         },\r\n        //     email:'vishu@gmail.com',\r\n        //     deliveryMethod:'fastest'\r\n        //     }\r\n        // }\r\n        // axios.post('/orders.json',order)\r\n        // .then(response=>{\r\n        //     console.log(response);\r\n        //     this.setState({loading:false,purchasing:false});\r\n        // })\r\n        // .catch(err=>{\r\n        //     this.setState({loading:false,purchasing:false});\r\n        //     console.log(err);\r\n        // });  \r\n        const queryParams =[];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price='+this.props.price);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname:'/checkout',\r\n            search:'?'+queryString\r\n        });\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0;\r\n        }\r\n        let Ordersummary = null;\r\n        let burger =this.state.error?<p>Ingredients can't be loaded!</p>:<Spinner />;\r\n        if(this.props.ings){\r\n            burger =(<Aux>\r\n                <Burger ingredients={this.props.ings}/>\r\n                <BuildControls \r\n                ingredientAdded={this.props.onIngredientAdded}\r\n                ingredientRemoved={this.props.onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                ordered={this.purchaseHandler}\r\n                price={this.props.price}/>\r\n            </Aux>\r\n            );\r\n            Ordersummary = (<OrderSummary ingredients={this.props.ings} price={this.props.price} purchaseCancelled={this.purchaseCancelHandler}purchaseContinued={this.purchaseContinueHandler}/>\r\n            );\r\n        }\r\n        if(this.state.loading){\r\n            Ordersummary = <Spinner />;\r\n        }\r\n        console.log(\"Burger Builder\");\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                show={this.state.purchasing}\r\n                modalClosed={this.purchaseCancelHandler}>\r\n                    {Ordersummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings:state.ingredients,\r\n        price:state.totalPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onIngredientAdded:(ingName) =>dispatch({type:actionTypes.ADD_INGREDIENT,ingredientName:ingName}),\r\n        onIngredientRemoved:(ingName) =>dispatch({type:actionTypes.REMOVE_INGREDIENT,ingredientName:ingName})\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}