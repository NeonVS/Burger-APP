{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nclass App extends Component {\n  //function App(props) {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: BurgerBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/checkout\",\n        component: Checkout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/orders\",\n        component: Orders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/auth\",\n        component: Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/App.js"],"names":["React","Component","Route","withRouter","Switch","Layout","BurgerBuilder","Checkout","Orders","Auth","Logout","actions","connect","asyncComponent","asyncCheckout","asyncOrders","App","componentDidMount","props","onTryAutoSignup","render","routes","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Route,withRouter,Switch} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport {connect} from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(()=>{\n  return import('./containers/Checkout/Checkout')\n});\nconst asyncOrders = asyncComponent(()=>{\n  return import('./containers/Checkout/Checkout')\n});\n\n\nclass App extends Component{\n//function App(props) {\n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n  render(){\n    let routes = (\n      <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\"  component={BurgerBuilder} />\n      </Switch>\n    );\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n    return (\n      <div >\n        <Layout>\n          {routes}\n          \n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onTryAutoSignup:() =>dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n "]},"metadata":{},"sourceType":"module"}