{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-order';\nimport { useImperativeHandle } from 'react';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    const queryParam = '?auth=' + token + '&orderBy=userId&equalTo=' + useImperativeHandle;\n    axios.post('/orders.json?auth=' + token, orderData).then(response => {\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchOrderSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrders = token => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    axios.get('/orders.json?auth=' + token).then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      dispatch(fetchOrderSuccess(fetchedOrders));\n    }).catch(err => {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/actions/order.js"],"names":["actionTypes","axios","useImperativeHandle","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","queryParam","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrderSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","get","res","fetchedOrders","key","push","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,mBAAT,QAAoC,OAApC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAIC,SAAJ,KAAiB;AAClD,SAAO;AACHC,IAAAA,IAAI,EAACN,WAAW,CAACO,uBADd;AAEHC,IAAAA,OAAO,EAACJ,EAFL;AAGHC,IAAAA,SAAS,EAACA;AAHP,GAAP;AAKH,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAU;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAACN,WAAW,CAACW,oBADd;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAK;AACpC,SAAO;AACHN,IAAAA,IAAI,EAACN,WAAW,CAACa;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACT,SAAD,EAAWU,KAAX,KAAoB;AAC9C,SAAQC,QAAD,IAAa;AAChBA,IAAAA,QAAQ,CAACJ,mBAAmB,EAApB,CAAR;AACA,UAAMK,UAAU,GAAC,WAASF,KAAT,GAAe,0BAAf,GAA0Cb,mBAA3D;AACAD,IAAAA,KAAK,CAACiB,IAAN,CAAW,uBAAqBH,KAAhC,EAAsCV,SAAtC,EACCc,IADD,CACMC,QAAQ,IAAE;AACZJ,MAAAA,QAAQ,CAACb,qBAAqB,CAACiB,QAAQ,CAACC,IAAT,CAAcC,IAAf,EAAoBjB,SAApB,CAAtB,CAAR;AACH,KAHD,EAICkB,KAJD,CAIOb,KAAK,IAAE;AACVM,MAAAA,QAAQ,CAACP,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACH,KAND;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMc,YAAY,GAAG,MAAK;AAC7B,SAAO;AACHlB,IAAAA,IAAI,EAACN,WAAW,CAACyB;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAIC,MAAD,IAAU;AACvC,SAAO;AACHrB,IAAAA,IAAI,EAACN,WAAW,CAAC4B,oBADd;AAEHD,IAAAA,MAAM,EAACA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,eAAe,GAAInB,KAAD,IAAU;AACrC,SAAO;AACHJ,IAAAA,IAAI,EAACN,WAAW,CAAC8B,iBADd;AAEHpB,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMqB,gBAAgB,GAAG,MAAK;AACjC,SAAO;AACHzB,IAAAA,IAAI,EAACN,WAAW,CAACgC;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIlB,KAAD,IAAU;AACjC,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACe,gBAAgB,EAAjB,CAAR;AACA9B,IAAAA,KAAK,CAACiC,GAAN,CAAU,uBAAqBnB,KAA/B,EACCI,IADD,CACMgB,GAAG,IAAE;AACP,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAI,IAAIC,GAAR,IAAeF,GAAG,CAACd,IAAnB,EAAwB;AACpBe,QAAAA,aAAa,CAACE,IAAd,CAAmB,EAAC,GAAGH,GAAG,CAACd,IAAJ,CAASgB,GAAT,CAAJ;AAAkBjC,UAAAA,EAAE,EAACiC;AAArB,SAAnB;AACH;;AACDrB,MAAAA,QAAQ,CAACU,iBAAiB,CAACU,aAAD,CAAlB,CAAR;AACH,KAPD,EAQCb,KARD,CAQOgB,GAAG,IAAG;AACTvB,MAAAA,QAAQ,CAACa,eAAe,CAACU,GAAD,CAAhB,CAAR;AACH,KAVD;AAWH,GAbD;AAcH,CAfM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\nimport { useImperativeHandle } from 'react';\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = (orderData,token) =>{\r\n    return (dispatch) =>{\r\n        dispatch(purchaseBurgerStart());\r\n        const queryParam='?auth='+token+'&orderBy=userId&equalTo='+useImperativeHandle;\r\n        axios.post('/orders.json?auth='+token,orderData)\r\n        .then(response=>{\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error));\r\n        }); \r\n    };\r\n};\r\n\r\nexport const purchaseInit = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders)=>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders:orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token) =>{\r\n    return dispatch =>{\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth='+token)\r\n        .then(res=>{\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({...res.data[key],id:key});\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders));\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchOrdersFail(err));\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}