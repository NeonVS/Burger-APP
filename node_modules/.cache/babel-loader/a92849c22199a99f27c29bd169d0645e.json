{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authData => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    authData: authData\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/   accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\n\n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\n    }\n\n    axios.post(url, authData).then(response => {\n      dispatch(authSuccess(response.data));\n    }).catch(err => dispatch(authFail(err)));\n  };\n};","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","authData","AUTH_SUCCESS","authFail","error","AUTH_FAIL","auth","email","password","isSignup","dispatch","returnSecureToken","url","post","then","response","data","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAACH,WAAW,CAACI;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAa;AACpC,SAAO;AACHH,IAAAA,IAAI,EAACH,WAAW,CAACO,YADd;AAEHD,IAAAA,QAAQ,EAACA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,QAAQ,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHN,IAAAA,IAAI,EAACH,WAAW,CAACU,SADd;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,IAAI,GAAE,CAACC,KAAD,EAAOC,QAAP,EAAgBC,QAAhB,KAA4B;AAC3C,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACA,UAAMI,QAAQ,GAAC;AACXM,MAAAA,KAAK,EAACA,KADK;AAEXC,MAAAA,QAAQ,EAACA,QAFE;AAGXG,MAAAA,iBAAiB,EAAC;AAHP,KAAf;AAKA,QAAIC,GAAG,GAAG,0GAAV;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAG,sHAAN;AACH;;AACDhB,IAAAA,KAAK,CAACiB,IAAN,CAAWD,GAAX,EAAeX,QAAf,EAAyBa,IAAzB,CAA8BC,QAAQ,IAAG;AACrCL,MAAAA,QAAQ,CAACV,WAAW,CAACe,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACH,KAFD,EAEGC,KAFH,CAESC,GAAG,IACRR,QAAQ,CAACP,QAAQ,CAACe,GAAD,CAAT,CAHZ;AAKH,GAhBD;AAiBH,CAlBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (authData) =>{\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        authData:authData\r\n    };\r\n};\r\n\r\nexport const authFail = (error) =>{\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const auth =(email,password,isSignup) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/   accounts:signUp?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=AIzaSyB82NNpMRmyiLHdvtZMp5IeuzpwZHibc9w';\r\n        }\r\n        axios.post(url,authData).then(response =>{\r\n            dispatch(authSuccess(response.data));\r\n        }).catch(err =>\r\n            dispatch(authFail(err))\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}