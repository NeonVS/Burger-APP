{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development Projects\\\\burger_app\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.module.css';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Mail'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      if (isValid) isValid = value.trim() !== '';\n    }\n\n    if (rules.minLength) {\n      if (isValid) isValid = value.length >= rules.minLength;\n    }\n\n    if (rules.maxLength) {\n      if (isValid) isValid = value.length <= rules.maxLength;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementArray = [];\n\n    for (let key in this.state.controls) {\n      formElementArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    const form = formElementArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.configelementConfig,\n      value: formElement.config.value,\n      shouldValidate: formElement.configvalidation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandle(event, formElement.id),\n      invalid: !formElement.config.valid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, form, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","classes","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","rules","isValid","trim","length","maxLength","render","formElementArray","key","push","id","config","form","map","formElement","configelementConfig","configvalidation","inputChangedHandle"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your Mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        }\r\n    }\r\n    checkValidity(value,rules){\r\n        let isValid = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if(rules.required){\r\n            if(isValid)\r\n                isValid = value.trim() !== '';\r\n        }\r\n        if(rules.minLength){\r\n            if(isValid)\r\n                isValid = value.length >= rules.minLength;\r\n        }\r\n        if(rules.maxLength){\r\n            if(isValid)\r\n                isValid = value.length <= rules.maxLength;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,controlName) =>{\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            });\r\n        }\r\n        const form = formElementArray.map(formElement => (\r\n            <Input  \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.configelementConfig}\r\n                value={formElement.config.value} \r\n                shouldValidate={formElement.configvalidation}\r\n                touched={formElement.config.touched}\r\n                changed={(event)=>this.inputChangedHandle(event,formElement.id)}\r\n                invalid={!formElement.config.valid}/>\r\n        ));\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <form>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}