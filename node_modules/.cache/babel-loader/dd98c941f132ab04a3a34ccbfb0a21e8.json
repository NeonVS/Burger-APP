{"ast":null,"code":"import _objectSpread from\"D:\\\\Web Development Projects\\\\burger_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import axios from'../../axios-order';export var purchaseBurgerSuccess=function purchaseBurgerSuccess(id,orderData){return{type:actionTypes.PURCHASE_BURGER_SUCCESS,orderId:id,orderData:orderData};};export var purchaseBurgerFail=function purchaseBurgerFail(error){return{type:actionTypes.PURCHASE_BURGER_FAIL,error:error};};export var purchaseBurgerStart=function purchaseBurgerStart(){return{type:actionTypes.PURCHASE_BURGER_START};};export var purchaseBurger=function purchaseBurger(orderData,token){return function(dispatch){dispatch(purchaseBurgerStart());axios.post('/orders.json?auth='+token,orderData).then(function(response){dispatch(purchaseBurgerSuccess(response.data.name,orderData));}).catch(function(error){dispatch(purchaseBurgerFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrderSuccess=function fetchOrderSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());var queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';axios.get('/orders.json'+queryParams).then(function(res){var fetchedOrders=[];for(var key in res.data){fetchedOrders.push(_objectSpread({},res.data[key],{id:key}));}dispatch(fetchOrderSuccess(fetchedOrders));}).catch(function(err){dispatch(fetchOrdersFail(err));});};};","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrderSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = (orderData,token) =>{\r\n    return (dispatch) =>{\r\n        dispatch(purchaseBurgerStart());\r\n        \r\n        axios.post('/orders.json?auth='+token,orderData)\r\n        .then(response=>{\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error));\r\n        }); \r\n    };\r\n};\r\n\r\nexport const purchaseInit = () =>{\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders)=>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders:orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () =>{\r\n    return {\r\n        type:actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token,userId) =>{\r\n    return dispatch =>{\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\r\n        \r\n        axios.get('/orders.json'+queryParams)\r\n        .then(res=>{\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({...res.data[key],id:key});\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders));\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchOrdersFail(err));\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}