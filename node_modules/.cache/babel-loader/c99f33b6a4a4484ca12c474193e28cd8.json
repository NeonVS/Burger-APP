{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst puchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  return { ...state,\n    loading: false,\n    purchased: true,\n    orders: [...state.orders, { ...action.orderData,\n      id: action.orderId\n    }]\n  };\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return { ...state,\n    loading: false\n  };\n};\n\nconst fetchOrderSuccess = (state, action) => {\n  return { ...state,\n    orders: action.orders,\n    loading: false\n  };\n};\n\nconst fetchOrderFail = (state, action) => {\n  return { ...state,\n    loading: false\n  };\n};\n\nconst fetchOrderStart = (state, action) => {\n  return { ...state,\n    loading: true\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return puchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrderStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrderSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrderFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Web Development Projects/burger_app/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","puchaseBurgerStart","purchaseBurgerSuccess","orderData","id","orderId","purchaseBurgerFail","fetchOrderSuccess","fetchOrderFail","fetchOrderStart","reducer","type","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC,EADU;AAEjBC,EAAAA,OAAO,EAAC,KAFS;AAGjBC,EAAAA,SAAS,EAAC;AAHO,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAClC,SAAOP,YAAY,CAACM,KAAD,EAAO;AAACF,IAAAA,SAAS,EAAC;AAAX,GAAP,CAAnB;AACH,CAFD;;AAGA,MAAMI,kBAAkB,GAAG,CAACF,KAAD,EAAOC,MAAP,KAAiB;AACxC,SAAOP,YAAY,CAACM,KAAD,EAAO;AAACH,IAAAA,OAAO,EAAC;AAAT,GAAP,CAAnB;AACH,CAFD;;AAGA,MAAMM,qBAAqB,GAAG,CAACH,KAAD,EAAOC,MAAP,KAAiB;AAC3C,SAAO,EACH,GAAGD,KADA;AAEHH,IAAAA,OAAO,EAAC,KAFL;AAGHC,IAAAA,SAAS,EAAC,IAHP;AAIHF,IAAAA,MAAM,EAAC,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAiB,EAAC,GAAGK,MAAM,CAACG,SAAX;AAAqBC,MAAAA,EAAE,EAACJ,MAAM,CAACK;AAA/B,KAAjB;AAJJ,GAAP;AAMH,CAPD;;AAQA,MAAMC,kBAAkB,GAAG,CAACP,KAAD,EAAOC,MAAP,KAAiB;AACxC,SAAO,EACH,GAAGD,KADA;AAEHH,IAAAA,OAAO,EAAC;AAFL,GAAP;AAIH,CALD;;AAMA,MAAMW,iBAAiB,GAAG,CAACR,KAAD,EAAOC,MAAP,KAAiB;AACvC,SAAO,EACH,GAAGD,KADA;AAEHJ,IAAAA,MAAM,EAACK,MAAM,CAACL,MAFX;AAGHC,IAAAA,OAAO,EAAC;AAHL,GAAP;AAKH,CAND;;AAOA,MAAMY,cAAc,GAAG,CAACT,KAAD,EAAOC,MAAP,KAAiB;AACpC,SAAO,EACH,GAAGD,KADA;AAEHH,IAAAA,OAAO,EAAC;AAFL,GAAP;AAIH,CALD;;AAMA,MAAMa,eAAe,GAAG,CAACV,KAAD,EAAOC,MAAP,KAAiB;AACrC,SAAM,EACF,GAAGD,KADD;AAEFH,IAAAA,OAAO,EAAC;AAFN,GAAN;AAIH,CALD;;AAOC,MAAMc,OAAO,GAAG,CAACX,KAAK,GAAGL,YAAT,EAAsBM,MAAtB,KAAgC;AAC7C,UAAOA,MAAM,CAACW,IAAd;AACI,SAAKnB,WAAW,CAACoB,qBAAjB;AACI,aAAOX,kBAAkB,CAACF,KAAD,EAAOC,MAAP,CAAzB;;AACJ,SAAKR,WAAW,CAACqB,uBAAjB;AACI,aAAOX,qBAAqB,CAACH,KAAD,EAAOC,MAAP,CAA5B;;AACJ,SAAKR,WAAW,CAACsB,oBAAjB;AACI,aAAOR,kBAAkB,CAACP,KAAD,EAAOC,MAAP,CAAzB;;AACJ,SAAKR,WAAW,CAACuB,aAAjB;AACI,aAAOjB,YAAY,CAACC,KAAD,EAAOC,MAAP,CAAnB;;AACJ,SAAKR,WAAW,CAACwB,kBAAjB;AACI,aAAOP,eAAe,CAACV,KAAD,EAAOC,MAAP,CAAtB;;AACJ,SAAKR,WAAW,CAACyB,oBAAjB;AACG,aAAOV,iBAAiB,CAACR,KAAD,EAAOC,MAAP,CAAxB;;AACH,SAAKR,WAAW,CAAC0B,iBAAjB;AACI,aAAOV,cAAc,CAACT,KAAD,EAAOC,MAAP,CAArB;;AACJ;AACI,aAAOD,KAAP;AAhBR;AAkBH,CAnBA;;AAqBD,eAAeW,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders:[],\r\n    loading:false,\r\n    purchased:false\r\n};\r\n\r\nconst purchaseInit = (state,action) =>{\r\n    return updateObject(state,{purchased:false});\r\n}\r\nconst puchaseBurgerStart = (state,action) =>{\r\n    return updateObject(state,{loading:true});\r\n}\r\nconst purchaseBurgerSuccess = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false,\r\n        purchased:true,\r\n        orders:[...state.orders,{...action.orderData,id:action.orderId}]\r\n    };\r\n}\r\nconst purchaseBurgerFail = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false\r\n    };\r\n}\r\nconst fetchOrderSuccess = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        orders:action.orders,\r\n        loading:false\r\n    };\r\n}\r\nconst fetchOrderFail = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false \r\n    };\r\n}\r\nconst fetchOrderStart = (state,action) =>{\r\n    return{\r\n        ...state,\r\n        loading:true\r\n    };\r\n};\r\n\r\n const reducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return puchaseBurgerStart(state,action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state,action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state,action);\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state,action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrderStart(state,action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n           return fetchOrderSuccess(state,action);\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrderFail(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}